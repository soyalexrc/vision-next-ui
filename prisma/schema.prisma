generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model AppConfig {
  id          String @id @default(cuid())
  code        String
  valie       String
  description String
}

model TemporalId {
  id String @id @default(cuid())
}

model DeleteFileRequest {
  id       String @id @default(cuid())
  path     String
  username String
  userId   String
  type     String
}

model Property {
  id                      String                    @id @default(cuid())
  userId                  String
  distribution            Json[]
  adjacencies             Adjacency[]
  utilities               Utility[]
  equipments              Equipment[]
  slug                    String                    @unique
  images                  String[]
  attributes              Attribute[]
  furnishedAreas          String[]
  documentsInformation    DocumentsInformation?
  generalInformation      GeneralInformation?
  locationInformation     LocationInformation?
  negotiationInformation  NegotiationInfomation?
  statusHistory           PropertyStatusEntry?
  AdjacenciesOnProperties AdjacenciesOnProperties[]
  AttributesOnProperties  AttributesOnProperties[]
  UtilitiesOnProperties   UtilitiesOnProperties[]
  EquipmentsOnProperties  EquipmentsOnProperties[]
}

model DocumentsInformation {
  id                         String   @id @default(cuid())
  propertyId                 String   @unique
  propertyDoc                Boolean  @default(false)
  CIorRIF                    Boolean  @default(false)
  ownerCIorRIF               Boolean  @default(false)
  spouseCIorRIF              Boolean  @default(false)
  isCatastralRecordSameOwner Boolean  @default(false)
  condominiumSolvency        Boolean  @default(false)
  mainProperty               Boolean  @default(false)
  mortgageRelease            String?
  condominiumSolvencyDetails String?
  power                      String?
  successionDeclaration      String?
  courtRulings               String?
  catastralRecordYear        String?
  attorneyEmail              String?
  attorneyPhone              String?
  attorneyFirstName          String?
  attorneyLastName           String?
  property                   Property @relation(fields: [propertyId], references: [id])
}

model GeneralInformation {
  id                         String   @id @default(cuid())
  propertyId                 String   @unique
  status                     String?
  code                       String
  footageGround              String
  footageBuilding            String
  description                String
  propertyType               String
  propertyCondition          String?
  handoverKeys               Boolean  @default(false)
  termsAndConditionsAccepted Boolean  @default(false)
  antiquity                  String?
  zoning                     String?
  amountOfFloors             String?
  propertiesPerFloor         String?
  typeOfWork                 String?
  isFurnished                Boolean  @default(false)
  isOccupiedByPeople         Boolean  @default(false)
  publicationTitle           String
  property                   Property @relation(fields: [propertyId], references: [id])
}

model LocationInformation {
  id                     String   @id @default(cuid())
  propertyId             String   @unique
  location               String?
  nomenclature           String?
  tower                  String?
  amountOfFloors         String?
  isClosedStreet         String?
  country                String
  state                  String
  municipality           String?
  urbanization           String?
  avenue                 String?
  street                 String?
  buildingShoppingCenter String?
  buildingNumber         String?
  floor                  String?
  referencePoint         String?
  howToGet               String?
  trunkNumber            String?
  trunkLevel             String?
  parkingNumber          String?
  parkingLevel           String?
  city                   String
  property               Property @relation(fields: [propertyId], references: [id])
}

model NegotiationInfomation {
  id                    String   @id @default(cuid())
  propertyId            String   @unique
  price                 String
  minimumNegotiation    String?
  client                String?
  reasonToSellOrRent    String?
  partOfPayment         String?
  mouthToMouth          Boolean  @default(false)
  realStateGroups       Boolean  @default(false)
  realStateWebPages     Boolean  @default(false)
  socialMedia           Boolean  @default(false)
  publicationOnBuilding Boolean  @default(false)
  operationType         String
  propertyExclusivity   String
  ownerPaysCommission   String?
  rentCommission        String?
  sellCommission        String?
  ally                  String?
  externalAdviser       String?
  realStateAdviser      String?
  property              Property @relation(fields: [propertyId], references: [id])
}

model PropertyStatusEntry {
  id         String   @id @default(cuid())
  propertyId String   @unique
  username   String
  status     String
  comments   String
  property   Property @relation(fields: [propertyId], references: [id])
}

model AttributesOnProperties {
  property    Property       @relation(fields: [propertyId], references: [id])
  propertyId  String
  attribute   Attribute      @relation(fields: [attribyteId], references: [id])
  attribyteId Int
  createdAt   DateTime       @default(now())
  value       String
  valueType   FormValueTypes @default(string)

  @@id([propertyId, attribyteId])
}

model Attribute {
  id                     Int                      @id @default(autoincrement())
  formType               FormTypes
  label                  String
  placeholder            String?
  options                String?
  properties             Property[]
  AttributesOnProperties AttributesOnProperties[]
}

model Service {
  id          String      @id @default(cuid())
  title       String
  subServices SubService?
}

model SubService {
  id        String  @id @default(cuid())
  service   String
  serviceId String  @unique
  Service   Service @relation(fields: [serviceId], references: [id])
}

model Categories {
  id          Int     @id @default(autoincrement())
  title       String
  description String?
  titlePlural String
  isFeatured  Boolean
}

model SocialMediaLink {
  id       Int    @id @default(autoincrement())
  title    String
  href     String
  iconName String
}

model Adjacency {
  id                      Int                       @id @default(autoincrement())
  title                   String
  description             String?
  properties              Property[]
  AdjacenciesOnProperties AdjacenciesOnProperties[]
}

model AdjacenciesOnProperties {
  property    Property  @relation(fields: [propertyId], references: [id])
  propertyId  String
  adjacency   Adjacency @relation(fields: [adjacencyId], references: [id])
  adjacencyId Int
  createdAt   DateTime  @default(now())

  @@id([propertyId, adjacencyId])
}

model Utility {
  id                    Int                     @id @default(autoincrement())
  title                 String
  description           String?
  properties            Property[]
  UtilitiesOnProperties UtilitiesOnProperties[]
}

model UtilitiesOnProperties {
  property              Property @relation(fields: [propertyId], references: [id])
  propertyId            String
  utility               Utility  @relation(fields: [utilityId], references: [id])
  utilityId             Int
  createdAt             DateTime @default(now())
  additionalInformation String?

  @@id([propertyId, utilityId])
}

model Equipment {
  id                     Int                      @id @default(autoincrement())
  title                  String
  description            String?
  EquipmentsOnProperties EquipmentsOnProperties[]
  properties             Property[]
}

model EquipmentsOnProperties {
  property              Property  @relation(fields: [propertyId], references: [id])
  propertyId            String
  equipment             Equipment @relation(fields: [equipmentId], references: [id])
  equipmentId           Int
  createdAt             DateTime  @default(now())
  brand                 String?
  additionalInformation String?

  @@id([propertyId, equipmentId])
}

enum FormTypes {
  check
  text
  select
}

enum FormValueTypes {
  string
  boolean
  number
}
